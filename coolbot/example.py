import logging
from typing import Dict
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.callback_data import CallbackData
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import re

phone_pattern = r'^\+?[1-9]\d{1,14}$'
# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
fsm_storage = MemoryStorage()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –∏ —Å–≤—è–∑—ã–≤–∞–µ–º –µ–≥–æ —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π


# Initialize bot and dispatcher
API_TOKEN = "5861953499:AAHOSNaGSk9m2tQp1Ozz_vmARxT9HPh2xD4"
ADMIN_CHAT_ID = 191531906


logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=fsm_storage)  


# Callback data
menu_cb = CallbackData("menu", "action")
back_cb = CallbackData("back", "main_menu")
myact_cb = CallbackData("myact", "action")

# —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏
gender_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
boy_button = KeyboardButton('–ú–∞–ª—å—á–∏–∫ \U0001F466')
girl_button = KeyboardButton('–î–µ–≤–æ—á–∫–∞ \U0001F467')
gender_keyboard.add(boy_button, girl_button)


# —Å–æ–∑–¥–∞–µ–º –∫–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è FSM –æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–£
class ApplicationForm(StatesGroup):
    child_name = State()  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–º–µ–Ω–∏ —Ä–µ–±–µ–Ω–∫–∞
    child_gender = State()  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞
    parent_name = State()  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–º–µ–Ω–∏ —Ä–æ–¥–∏—Ç–µ–ª—è
    parent_phone = State()  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—è


# Menu items
menu_items: Dict[str, str] = {
    "program": "–ü—Ä–æ–≥—Ä–∞–º–º–∞ üìö",
    "place": "–ú–µ—Å—Ç–æ üìç",
    "price": "–¶–µ–Ω–∞ üí∞",
    "question": "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ü§î",
    "myact": "–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É üìù",
}


# Inline keyboard
inline_keyboard = InlineKeyboardMarkup(row_width=2)
for action, description in menu_items.items():
    button = InlineKeyboardButton(description, callback_data=menu_cb.new(action=action))
    inline_keyboard.add(button)

# Back button
back_button = InlineKeyboardMarkup().add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=back_cb.new(main_menu="main")))

#Myact button
myact_keyboard = InlineKeyboardMarkup(row_width=2)
for action, description in menu_items.items():
    if action.startswith("myact"):
        button = InlineKeyboardButton(description, callback_data=myact_cb.new(action=action))
        myact_keyboard.add(button)




# Messages and button descriptions
WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç! üòÉ –Ø –±–æ—Ç —à–∫–æ–ª—ã –∏—Å–∫—É—Å—Å—Ç–≤ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ CoolScool. "
    "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ:"
)
PROGRAM_MESSAGE = "–ü—Ä–æ–≥—Ä–∞–º–º–∞ CoolScool üìö: \n 1. –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞\n 2. –ö–µ—Ä–∞–º–∏–∫–∞\n 3. –¢—Ä—É–¥—ã\n 4. –í—ã—à–∏–≤–∞–Ω–∏–µ\n 5. –ê–Ω–≥–ª–∏–π—Å–∫–∏–π\n 6. –ú—É–∑—ã–∫–∞\n 7. –ü–∞—Ä–∫—É—Ä\n 8. –ë–∞—Ä–∞–±–∞–Ω—ã"
PLACE_MESSAGE = "–ê–¥—Ä–µ—Å CoolScool üìç: Koh Phangan üå¥üåä"
PRICE_MESSAGE = "–¶–µ–Ω—ã –Ω–∞ –∑–∞–Ω—è—Ç–∏—è –≤ CoolScool üí∞: ..."
QUESTION_MESSAGE = "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É üìû"
MYACT_MESSAGE = "–ß—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏."
DESCRIPTIONS = {
    "program": PROGRAM_MESSAGE,
    "place": PLACE_MESSAGE,
    "price": PRICE_MESSAGE,
    "question": QUESTION_MESSAGE,
    "myact": MYACT_MESSAGE,
}
myactstup = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ:\n\n"\
                   " –ò–º—è —Ä–µ–±–µ–Ω–∫–∞\n"\
                   "–í–≤–µ–¥–∏—Ç–µ /cancel –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–± –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏."

async def start_handler(message: types.Message, state: FSMContext):
    await state.set_state(ApplicationForm.child_name) # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–º–µ–Ω–∏ —Ä–µ–±–µ–Ω–∫–∞
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ä–µ–±–µ–Ω–∫–∞")


@dp.message_handler(commands=['start', 'help'])
async def process_start_command(message: types.Message):
    """
    Handle the /start and /help commands
    """
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await message.answer(WELCOME_MESSAGE, reply_markup=inline_keyboard)


@dp.callback_query_handler(back_cb.filter(main_menu="main"))
async def process_callback_back_to_main(callback_query: CallbackQuery):
    """
    Process back callback to main menu
    """
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    message = await bot.edit_message_text(chat_id=callback_query.message.chat.id,
                                          message_id=callback_query.message.message_id,
                                          text=WELCOME_MESSAGE,
                                          reply_markup=inline_keyboard)
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –æ—Å—Ç–∞–≤–∞–ª–∞—Å—å –≤–∏—Å–µ—Ç—å
    await bot.answer_callback_query(callback_query.id)

@dp.callback_query_handler(menu_cb.filter())
async def process_callback_menu(callback_query: CallbackQuery, callback_data: dict):
    """
    Process menu callback
    """
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    action = callback_data["action"]
    description = DESCRIPTIONS[action]

    if action == "myact":
        # –ø–µ—Ä–µ–≤–æ–¥–∏–º –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ child_name –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ä–µ–±–µ–Ω–∫–∞
        await ApplicationForm.child_name.set()
        await bot.send_message(chat_id=callback_query.message.chat.id, text="–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã  –Ω–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω—è—Ç—å –∞–Ω–∫–µ—Ç—É –≤–≤–µ–¥–∏—Ç–µ –∏–º—è —Ä–µ–±–µ–Ω–∫–∞")

    else:

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –ø—É–Ω–∫—Ç–æ–º –º–µ–Ω—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –æ—Å—Ç–∞–≤–∞–ª–∞—Å—å –≤–∏—Å–µ—Ç—å
        await bot.edit_message_text(chat_id=callback_query.message.chat.id,\
                                message_id=callback_query.message.message_id,\
                                text=description,\
                                reply_markup=back_button
                              )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–º–µ–Ω–∏ —Ä–µ–±–µ–Ω–∫–∞
@dp.message_handler(state=ApplicationForm.child_name)
async def process_child_name(message: types.Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è —Ä–µ–±–µ–Ω–∫–∞ –≤ —Å—Ç–µ–π—Ç–µ
    await state.update_data(child_name=message.text)

    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞
    await ApplicationForm.child_gender.set()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞
    await message.answer("–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª —Ä–µ–±–µ–Ω–∫–∞", reply_markup = gender_keyboard)



# —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message_handler(state=ApplicationForm.child_gender)
async def process_child_gender(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–∞ —Ä–µ–±–µ–Ω–∫–∞
    """
    await message.answer(text='', reply_markup=types.ReplyKeyboardRemove())
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª —Ä–µ–±–µ–Ω–∫–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(child_gender=message.text)
    
    # –ø–µ—Ä–µ–≤–æ–¥–∏–º –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ parent_name –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ä–æ–¥–∏—Ç–µ–ª—è
    await ApplicationForm.parent_name.set()    
    
    await bot.send_message(chat_id=message.chat.id, text="–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é —Ä–æ–¥–∏—Ç–µ–ª—è")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–º–µ–Ω–∏ —Ä–æ–¥–∏—Ç–µ–ª—è
@dp.message_handler(state=ApplicationForm.parent_name)
async def process_parent_name(message: types.Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è —Ä–æ–¥–∏—Ç–µ–ª—è –≤ —Å—Ç–µ–π—Ç–µ
    await state.update_data(parent_name=message.text)

    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –±–æ—Ç–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—è
    await ApplicationForm.parent_phone.set()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—è
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—è
@dp.message_handler(regexp=phone_pattern, state=ApplicationForm.parent_phone)
async def process_parent_phone(message: types.Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω —Ä–æ–¥–∏—Ç–µ–ª—è –≤ —Å—Ç–µ–π—Ç–µ
    await state.update_data(parent_phone=message.text)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–µ–π—Ç–∞
    data = await state.get_data()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    message_text = f"–í—ã —É–∫–∞–∑–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ:\n" \
                   f"–ò–º—è —Ä–µ–±–µ–Ω–∫–∞: {data['child_name']}\n" \
                   f"–ü–æ–ª —Ä–µ–±–µ–Ω–∫–∞: {data['child_gender']}\n" \
                   f"–ò–º—è —Ä–æ–¥–∏—Ç–µ–ª—è: {data['parent_name']}\n" \
                   f"–¢–µ–ª–µ—Ñ–æ–Ω —Ä–æ–¥–∏—Ç–µ–ª—è: {data['parent_phone']}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    await bot.send_message(chat_id = "@mposenddata",\
                           text=f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n\
                           –ò–º—è —Ä–µ–±–µ–Ω–∫–∞: {data['child_name']}\n\
                           –ü–æ–ª —Ä–µ–±–µ–Ω–∫–∞: {data['child_gender']}\n\
                           –ò–º—è —Ä–æ–¥–∏—Ç–µ–ª—è:{data['parent_name']}\n\
                           –¢–µ–ª–µ—Ñ–æ–Ω —Ä–æ–¥–∏—Ç–µ–ª—è: {data['parent_phone']}")

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
    await bot.send_message(chat_id=message.chat.id, text="–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")


    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–µ–π—Ç
    await state.finish()




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)

